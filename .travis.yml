language: bash

env:
  global:
    - REPO="${TRAVIS_REPO_SLUG#*/}"
    - OWNER=plus3it
    - DEPLOY_SLUG=$OWNER/$REPO
    - RELEASE_VERSION=$(grep -E '^current_version' $TRAVIS_BUILD_DIR/.bumpversion.cfg | sed 's/^.*= //')

jobs:
  include:
    - stage: test
      env:
        - JOB="JSON Lint/Format"
      install:
        - jq --version
      script:
        - make json/lint
    - stage: test
      env:
        - JOB="Shell Script Lint"
        - SHELLCHECK_OPTS="-s bash"
      install:
        - shellcheck --version
      script:
        - make sh/lint
    - stage: test
      env:
        - JOB="CFN Lint"
      install:
        - pip install -r .requirements/cfn-lint.txt
        - cfn-lint --version
      language: python
      script:
        - make cfn/lint
    - stage: test
      env:
        - JOB="YAML Lint"
      install:
        - pip install --user yamllint
        - yamllint --version
      script:
        - make yaml/lint
    - stage: test
      env:
        - JOB="CFN Version Validation"
      install:
        - pip install -r .requirements/cfn-version-check.txt
        - jq --version
        - yq --version
      language: python
      script:
        - make cfn/version VERSION=$RELEASE_VERSION
    - stage: deploy
      env:
        - JOB="Deploy to GitHub Releases"
        - PRIOR_VERSION=$(git describe --abbrev=0 --tags)
        - RELEASE_BODY="* [$REPO v$RELEASE_VERSION changes](https://github.com/$OWNER/$REPO/compare/$PRIOR_VERSION...$RELEASE_VERSION)"
      script: skip
      before_deploy:
        - echo PRIOR_VERSION=$PRIOR_VERSION
        - echo RELEASE_VERSION=$RELEASE_VERSION
        - echo RELEASE_BODY=$RELEASE_BODY
      deploy:
        provider: releases
        api_key:
          secure: C0a1Fx1j13vjQomZB6xGo9AyFHfCzl2V1d335WuuupVbWV0flWBabRN4qdvvQwK0qpiOFm9biatoWegFj6TcUNx2jq2izdjFiPzH+ieObvCNgf92yZ0aWk9Lj5vwXcA+FmypZLelgVwhM5Ic/NbNecrmqNYrVN9otKRf9Df7JofKFUDRvMP2yMB9RSl0qv22EHQD13+fX+63Qoc33N/vO0SHqfs0APdpihD+tWQuhQN7dSZ7tvGgjY5uEvIeXWSrKhjEhPOZ84nVQbJNnVkNnheAjiqVlKobIGWzhevLCsygNkk33cuj4f/QTgsLNpcbwKyPbGj+p2dqkQyC8D4VpZ0/46G4sbYnN4FiXFtPPDnL9TQCPBe97xL7zg1nG6fKSh/5PY6c+I47Z3kdv6ry4X4aGVD4M2wtdduFi4Z6v+MBoqfi+jNzDtMyP1FMh6sYxVvsSS6QqMLNCyyqCRTd7TuY3wdrTZOuCzCHoLMV17VuCq5XV0aOtNytUFBg3G0D8gxGVA55G/k6ATmqjXbBrvh9ei4YH7baVvOIPs/Qy2wge5fh4P1us+OFIJINBaJodUGJGE9XRKaHh1pkI1l1VPrKUsj+5LZODyq7kBxEoOvpQiE3Lds16ek+hUF0tlNkcsesAe1bqRjG7Bdr9CG9Rn1IPmOiarX0+qFCgBv31dQ=
        name: $RELEASE_VERSION
        tag_name: $RELEASE_VERSION
        target_commitish: $TRAVIS_COMMIT
        body: $RELEASE_BODY
        draft: false
        'on':
          branch: master
          repo: $DEPLOY_SLUG
          condition: '"$PRIOR_VERSION" != "$RELEASE_VERSION"'
    - stage: deploy
      provider: script
      language: python
      env:
        - JOB="Deploy to S3"
      install: skip
      script: skip
      before_deploy:
        - pip install awscli
        - which aws
        - aws --version
      deploy:
        provider: script
        script: BUCKET=$BUCKET PREFIX=repos/$REPO/ VERSION=$TRAVIS_TAG make deploy
        'on':
          tags: true
          repo: $DEPLOY_SLUG
